import unittest
from grafo_adj import *



class TestGrafo(unittest.TestCase):

    def setUp(self):
        self.g_engenhariaComputacao = Grafo([], [])
        for i in ['11', '12', '13', '14', '15', '16', '17', '21', '22', '23', '24', '25', '26', '27', '31', '32', '33',
                  '34', '35', '36', '41', '42', '43', '44', '45', '51', '52', '53',
                  '54', '55', '61', '62', '63', '64', '65', '71', '72', '73', '74', '75', '81', '82', '83', '84', '85',
                  '91', '92', '93', '94', '101', '102', '103']:
            self.g_engenhariaComputacao.adiciona_vertice(i)
        for i in ["11-21", "14-24", "15-24", "14-25", "15-25", "16-26", "21-31", "24-33", "14-34", "15-34", "14-35",
                  "15-35", "26-36", "21-41", "24-43", "24-44", "36-44", "36-45", "31-51", "31-52",
                  "24-53", "24-54", "36-55", "44-55", "51-61", "43-62", "34-63", "35-63", "31-64", "55-65", "24-72",
                  "63-73", "52-75", "64-75", "34-81", "35-81", "54-81", "73-82", "74-83", "61-84",
                  "64-84", "75-85", "83-92", "44-93", "45-93", "61-94", "75-94", "92-103"]:
            self.g_engenhariaComputacao.adiciona_aresta(i)

        self.g_construcaoEdificios = Grafo([], [])
        for i in ['11', '12', '13', '14', '15', '16', '17', '18', '21', '22', '23', '24', '25', '26', '27', '31', '32',
                  '33', '34', '35', '36', '37', '38', '41', '42', '43', '44', '45', '46',
                  '47', '51', '52', '53', '54', '55', '56', '57', '61', '62', '63', '64', '65', '66', '67', '68', '71']:
            self.g_construcaoEdificios.adiciona_vertice(i)
        for i in ["15-21", "14-23", "11-24", "17-24", "15-25", "17-26", "17-27", "15-32", "21-32", "21-33", "15-34",
                  "23-35", "26-36", "23-37", "24-38", "17-41", "21-41", "17-42", "21-42", "11-43",
                  "23-43", "35-43", "35-45", "17-46", "32-46", "21-47", "37-51", "45-51", "46-52", '17-53', "32-53",
                  "47-54", "17-55", "32-55", "46-56", "43-57", "31-62", "57-62", "37-64", "45-64",
                  "22-66", "31-67", "57-67", "13-71", "22-71"]:
            self.g_construcaoEdificios.adiciona_aresta(i)

        self.g_Fisica = Grafo([], [])
        for i in ['11', '12', '13', '14', '15', '16', '17', '21', '22', '23', '24', '25', '26', '27', '31', '32', '33',
                  '34', '35', '36', '37', '41', '42', '43', '44', '45', '46', '51', '52',
                  '53', '54', '55', '56', '61', '62', '63', '64', '65', '66', '71', '72', '73', '74', '81', '82', '83',
                  '84', '85']:
            self.g_Fisica.adiciona_vertice(i)
        for i in ["11-21", "12-21", "11-22", "12-22", "12-23", "12-24", "14-24", "15-25", "21-31", "21-32", "22-32",
                  "23-33", "31-41", "32-42", "33-45", "31-46", "41-51", "45-51", "41-52", "42-52",
                  "45-53", "31-54", "43-55", "61-71", "41-72", "45-72", "66-73", "31-74", "43-74", "65-81", "74-82",
                  "73-83", "54-84", "71-84", "16-85", "25-85"]:
            self.g_Fisica.adiciona_aresta(i)

        self.g_Telematica = Grafo([], [])
        for i in ['11', '12', '13', '14', '15', '16', '17', '21', '22', '23', '24', '25', '26', '27', '31', '32', '33',
                  '34', '35', '36', '37', '41', '42', '43', '44', '45', '46', '47', '51',
                  '52', '53', '54', '55', '56', '61', '62', '63', '64', '65']:
            self.g_Telematica.adiciona_vertice(i)
        for i in ["11-21", "12-22", "16-22", "12-23", "16-23", "13-24", "16-26", "21-31", "26-32", "22-33", "23-33",
                  "26-33", "25-34", "25-35", "21-36", "24-36", "31-41", "31-42", "32-43", "32-44",
                  "33-44", "33-45", "21-46", "34-46", "41-51", "41-52", "44-53", "44-54", "37-55", "41-55", "44-55",
                  "42-61", "51-61", "53-62"]:
            self.g_Telematica.adiciona_aresta(i)

        self.g_Matematica = Grafo([], [])
        for i in ['11', '12', '13', '14', '15', '16', '21', '22', '23', '24', '25', '31', '32', '33', '34', '35', '36',
                  '41', '42', '43', '44', '45', '46', '47', '51', '52', '53', '54', '55',
                  '56', '57', '61', '62', '63', '64', '65', '67', '71', '72', '73', '74', '75', '77']:
            self.g_Matematica.adiciona_vertice(i)
        for i in ["12-21", "13-21", "13-23", "21-31", "21-32", "22-32", "23-33", "24-34", "25-35", "16-36", "31-41",
                  "32-42", "34-44", "36-45", "22-52", "21-53", "33-53", "45-55", "46-56", "47-57",
                  "51-61", "41-62", "56-64", "55-65", "57-67", "41-71", "41-72", "56-73", "64-73", "64-74", "65-75",
                  "67-77"]:
            self.g_Matematica.adiciona_aresta(i)

        self.g_Letras = Grafo([], [])
        for i in ['11', '12', '13', '14', '15', '16', '17', '21', '22', '23', '24', '25', '26', '27', '31', '32', '33',
                  '34', '35', '36', '37', '41', '42', '43', '44', '45', '46', '47', '51',
                  '52', '53', '54', '55', '56', '57', '61', '62', '63', '64', '65', '66', '67', '68', '71', '72', '73',
                  '74', '75', '76', '77', '78', '81', '82', '83', '84', '85', '86', '87',
                  '88']:
            self.g_Letras.adiciona_vertice(i)
        for i in ["11-21", "11-22", "12-23", "12-25", "17-26", "21-31", "21-32", "21-33", "24-34", "25-35", "31-41",
                  "33-42", "25-43", "25-44", "36-44", "23-46", "35-46", "37-47", "31-51", "35-52",
                  "13-53", "45-54", "35-55", "22-56", "37-57", "31-61", "31-62", "35-63", "54-64", "37-67", "54-68",
                  "31-71", "31-72", "31-73", "64-74", "35-75", "45-76", "27-77", "53-77", "64-78",
                  "68-78", "17-83", "74-84", "77-87", "74-88", "78-88"]:
            self.g_Letras.adiciona_aresta(i)

    def test_khan(self):
        self.assertEqual(self.g_engenhariaComputacao.khan('11'), ['11', '12', '13', '14', '15', '16', '17', '21', '22', '23', '24', '25', '26', '27', '31', '32', '33', '34', '35', '36', '41', '42', '43', '44', '45', '51', '52', '53', '54', '55', '61', '62', '63', '64', '65', '71', '72', '73', '74', '75', '81', '82', '83', '84', '85', '91', '92', '93', '94', '101', '102', '103'])
        self.assertEqual(self.g_construcaoEdificios.khan('11'), ['11', '12', '13', '14', '15', '16', '17', '18', '21', '22', '23', '24', '25', '26', '27', '31', '32', '33', '34', '35', '36', '37', '38', '41', '42', '43', '44', '45', '46', '47', '51', '52', '53', '54', '55', '56', '57', '61', '62', '63', '64', '65', '66', '67', '68', '71'])
        self.assertEqual(self.g_Fisica.khan('11'), ['11', '12', '13', '14', '15', '16', '17', '21', '22', '23', '24', '25', '26', '27', '31', '32', '33', '34', '35', '36', '37', '41', '42', '43', '44', '45', '46', '51', '52', '53', '54', '55', '56', '61', '62', '63', '64', '65', '66', '71', '72', '73', '74', '81', '82', '83', '84', '85'])
        self.assertEqual(self.g_Telematica.khan('11'), ['11', '12', '13', '14', '15', '16', '17', '21', '22', '23', '24', '25', '26', '27', '31', '32', '33', '34', '35', '36', '37', '41', '42', '43', '44', '45', '46', '47', '51', '52', '53', '54', '55', '56', '61', '62', '63', '64', '65'])
        self.assertEqual(self.g_Matematica.khan('11'), ['11', '12', '13', '14', '15', '16', '21', '22', '23', '24', '25', '31', '32', '33', '34', '35', '36', '41', '42', '43', '44', '45', '46', '47', '51', '52', '53', '54', '55', '56', '57', '61', '62', '63', '64', '65', '67', '71', '72', '73', '74', '75', '77'])
        self.assertEqual(self.g_Letras.khan('11'), ['11', '12', '13', '14', '15', '16', '17', '21', '22', '23', '24', '25', '26', '27', '31', '32', '33', '34', '35', '36', '37', '41', '42', '43', '44', '45', '46', '47', '51', '52', '53', '54', '55', '56', '57', '61', '62', '63', '64', '65', '66', '67', '68', '71', '72', '73', '74', '75', '76', '77', '78', '81', '82', '83', '84', '85', '86', '87', '88'])
    def test_dfs(self):
        self.assertEqual(self.g_engenhariaComputacao.dfs('11'), ['84', '94', '61', '51', '85', '75', '52', '64', '31', '41', '21', '11', '12', '13', '33', '62', '43', '65', '55', '93', '44', '53', '81', '82', '73', '63', '34', '54', '72', '24', '25', '35', '14', '15', '45', '36', '26', '16', '17', '22', '23', '27', '32', '42', '71', '103', '92', '83', '74', '91', '101', '102'])
        self.assertEqual(self.g_construcaoEdificios.dfs('11'), ['38', '24', '62', '67', '31', '57', '43', '11', '12', '71', '13', '51', '64', '37', '45', '35', '23', '14', '52', '56', '46', '36', '26', '27', '41', '42', '53', '55', '17', '32', '33', '54', '47', '21', '25', '34', '15', '16', '18', '66', '22', '44', '61', '63', '65', '68'])
        self.assertEqual(self.g_Fisica.dfs('11'), ['51', '52', '72', '41', '46', '84', '54', '82', '74', '31', '42', '32', '21', '22', '11', '53', '45', '33', '23', '24', '12', '13', '14', '85', '16', '25', '15', '17', '26', '27', '34', '35', '36', '37', '55', '43', '44', '56', '71', '61', '62', '63', '64', '81', '65', '83', '73', '66'])
        self.assertEqual(self.g_Telematica.dfs('11'), ['61', '42', '51', '52', '55', '37', '41', '31', '36', '46', '21', '11', '62', '53', '54', '44', '43', '32', '45', '33', '22', '23', '12', '24', '13', '14', '15', '26', '16', '17', '34', '35', '25', '27', '47', '56', '63', '64', '65'])
        self.assertEqual(self.g_Matematica.dfs('11'), ['11', '62', '71', '72', '41', '31', '42', '32', '53', '21', '12', '33', '23', '13', '14', '15', '75', '65', '55', '45', '36', '16', '52', '22', '44', '34', '24', '35', '25', '43', '73', '74', '64', '56', '46', '77', '67', '57', '47', '61', '51', '54', '63'])
        self.assertEqual(self.g_Letras.dfs('11'), ['41', '51', '61', '62', '71', '72', '73', '31', '32', '42', '33', '21', '56', '22', '11', '46', '23', '52', '55', '63', '75', '35', '43', '44', '25', '12', '87', '77', '27', '53', '13', '14', '15', '16', '26', '83', '17', '34', '24', '36', '47', '57', '67', '37', '84', '88', '74', '78', '64', '68', '54', '76', '45', '65', '66', '81', '82', '85', '86'])